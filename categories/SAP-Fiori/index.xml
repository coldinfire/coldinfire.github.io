<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SAP Fiori on Small Fire`s Blog</title>
    <link>https://coldinfire.github.io/categories/SAP-Fiori/</link>
    <description>Recent content in SAP Fiori on Small Fire`s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 22 Nov 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://coldinfire.github.io/categories/SAP-Fiori/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title> SAP CDS-Views </title>
      <link>https://coldinfire.github.io/2021/SAPHANA_CDS/</link>
      <pubDate>Mon, 22 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2021/SAPHANA_CDS/</guid>
      <description>Create CDS-Views CDS-Views Menu -&amp;gt; File -&amp;gt; New -&amp;gt; Other -&amp;gt; Core Data Services -&amp;gt; Data Definition * CDS-View als DDIC Objekt erstellen @AbapCatalog.sqlViewName: &amp;#39;ZCDS_MATNR_VIEW&amp;#39; @AbapCatalog.compiler.CompareFilter: true @AccessControl.authorizationCheck: #NOT_REQUIRED @EndUserText.label: &amp;#39;MATNR lesen&amp;#39; @Metadata.allowExtensions: true define view ZCDS_MATNR as select from mara as a inner join makt as b on a.matnr = b.matnr { key a.matnr as matnr, a.ernam as creator, a.vpsta as mainte_status, b.maktx as desc, case a.lvorm when &amp;#39;X&amp;#39;</description>
    </item>
    
    <item>
      <title> SAP HANA SQLScript 使用 </title>
      <link>https://coldinfire.github.io/2021/SAPHANA_SQLScript/</link>
      <pubDate>Thu, 18 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2021/SAPHANA_SQLScript/</guid>
      <description>SQLScript 是 SAP HANA 的专用 SQL 语言。SQLScript 是为 SAP HANA 数据库层的 SAP HANA 开发而设计的。SQLScript 在 code pushdown paradigm 转换中起着关键作用。 SQLScript 背后的动机是将数</description>
    </item>
    
    <item>
      <title> SAP HANA 开发环境 </title>
      <link>https://coldinfire.github.io/2021/SAPHANA_DevEnv/</link>
      <pubDate>Wed, 10 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2021/SAPHANA_DevEnv/</guid>
      <description>SAP HANA Studio SAP HANA Studio 是一个基于 Eclipse 的集成开发环境 (IDE)，可在 Eclipse 3.6 或更高版本上运行，它将各种开发和管理工具组合到一个包中。 SAP HANA Studio 拥有一个用于管理、监</description>
    </item>
    
    <item>
      <title> SAP HANA 结构分析 </title>
      <link>https://coldinfire.github.io/2021/SAPHANA_Architecture/</link>
      <pubDate>Sun, 07 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2021/SAPHANA_Architecture/</guid>
      <description>HANA 结构 SAP HANA 服务器使用各种组件来处理传入请求并返回结果集。 这些组件分为服务器和引擎，服务器是在操作系统级别运行的进程和服务，引擎是服务器内处理</description>
    </item>
    
    <item>
      <title> SAP HANA 知识链接 </title>
      <link>https://coldinfire.github.io/2021/SAPHANA_Basic/</link>
      <pubDate>Tue, 02 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2021/SAPHANA_Basic/</guid>
      <description>了解 HANA 的途径有 http://help.sap.com http://www.sdn.sap.com/irj/sdn/in-memory http://service.sap.com/hana Differences between S4HANA &amp;amp; ECC SAP S4 HANA SAP ECC 仅在 HANA 数据库上运行 在多个数据库上运行：Oracle、SQL Server、DB2 它经过优化以充分利用 SAP</description>
    </item>
    
    <item>
      <title> SAP NetWeaver Gateway  </title>
      <link>https://coldinfire.github.io/2019/SAPNetWeaverGateway/</link>
      <pubDate>Thu, 09 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/SAPNetWeaverGateway/</guid>
      <description>SAP NetWeaver Gateway SAP NetWeaver 概述 SAP Gateway 框架 SAP NetWeaver Gateway 是一种技术，它提供了一种基于市场标准将设备，环境和平台连接到 SAP 软件的简单方法。可以将SAP Gateway理解为是</description>
    </item>
    
    <item>
      <title> SAP OData 概述 </title>
      <link>https://coldinfire.github.io/2019/SAPUI5_OData/</link>
      <pubDate>Fri, 03 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/SAPUI5_OData/</guid>
      <description>OData (开放数据协议) OData 用于定义构建和使用 RESTful API 所需的最佳实践 OData 提供扩展功能，以满足 RESTful API 的任何自定义需求。 REST 代表 Representational State Transfer。 它依赖于无状</description>
    </item>
    
    <item>
      <title> SAPUI5 Message </title>
      <link>https://coldinfire.github.io/2019/SAPUI5_Message/</link>
      <pubDate>Sat, 27 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/SAPUI5_Message/</guid>
      <description>消息设置 sap.m.MessageBox SAPUI5 提供的对话框，可以显示信息、警告、错误等等。MessageBox 类是静态类，在使用之前必须执行 jQuery.sap.require(&amp;quot;sap.m.MessageBox&amp;quot;) 语句 SAPUI5 包含 jQuery 包，jQuery.s</description>
    </item>
    
    <item>
      <title> SAPUI5 Mock Server </title>
      <link>https://coldinfire.github.io/2019/SAPUI5_MockServer/</link>
      <pubDate>Fri, 26 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/SAPUI5_MockServer/</guid>
      <description>Mock server 在开发过程中，通过使用模拟服务器的方法方便测试，SAPUI5 将模拟服务器称为 mock server.mock server 的基本功能是模拟 oData 数据的提供者，截获应用程序对服务器端</description>
    </item>
    
    <item>
      <title> SAPUI5 Routing 导航 </title>
      <link>https://coldinfire.github.io/2019/SAPUI5_Routing/</link>
      <pubDate>Wed, 24 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/SAPUI5_Routing/</guid>
      <description>Routing导航 Openui5 的 routing 基于模式 ( pattern )，使用 # 符号表示不同的路径 ( route )，导航通过路径的改变来实现。 Pattern 表达式 Openui5 一共有 5 种 pattern表达式:</description>
    </item>
    
    <item>
      <title> SAPUI5 数据绑定 </title>
      <link>https://coldinfire.github.io/2019/SAPUI5_DataBinding/</link>
      <pubDate>Tue, 23 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/SAPUI5_DataBinding/</guid>
      <description>Model Binding 单数据绑定 使用数据绑定前 需要先实例化Model。构造函数获取实例的 URL 或则数据本身作为第一个参数。 JSON-Model: var oModel = new sap.ui.model.json.JSONModel(dataUrlOrData); XML-Model: var oModel = new sap.ui.model.xml.XMLModel(dataUrlOrData); OData-Model: var oModel = new sap.ui.model.odata.ODataModel(dataUrl[,userJSON,user,pass]); 给 Model</description>
    </item>
    
    <item>
      <title> SAPUI5 模块化 </title>
      <link>https://coldinfire.github.io/2019/SAPUI5_Module/</link>
      <pubDate>Mon, 22 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/SAPUI5_Module/</guid>
      <description>模块化 如何加载模块 jQuery.sap.declare(sModuleName,bCreateNamespace)申明一个模块，以确保模块存</description>
    </item>
    
    <item>
      <title> SAPUI5 数据类型和操作 </title>
      <link>https://coldinfire.github.io/2019/SAPUI5_DataOption/</link>
      <pubDate>Sun, 21 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/SAPUI5_DataOption/</guid>
      <description>数据类型和操作 基本数据类型 sap.ui.model.type.Integer(oFormatOptions?, oConstraints?):支持minimum,maximum sap.ui.model.type.Float(oFormatOptions?, oConstraints?):decimalS</description>
    </item>
    
    <item>
      <title> SAPUI5 Dialog and Fragment </title>
      <link>https://coldinfire.github.io/2019/SAPUI5_DialogAndFragment/</link>
      <pubDate>Sat, 20 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/SAPUI5_DialogAndFragment/</guid>
      <description>Dialogs and Fragments Fragments 片段是一个轻量级的 UI 部分，它只是一组重用控件的容器。包含一到多个控件，不需要控制器。 定义并调用已存在的 Fragments : &amp;ldquo;sap/ui/core/Fragment&amp;rdquo; 定义xxx.fragme</description>
    </item>
    
    <item>
      <title> SAPUI5 Layout </title>
      <link>https://coldinfire.github.io/2019/SAPUI5_Layout/</link>
      <pubDate>Fri, 19 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/SAPUI5_Layout/</guid>
      <description>Layout设置 多页面显示和跳转 sap.m.App : 是一个全局对象，可以通过 app.to(sPageId) 跳转到另一个页面。 to(sPageId, sTransitionName ? , oData ? , oTransitionParameters ? ): [sap.m.NavContainer] app.back()则跳回到刚才的pa</description>
    </item>
    
    <item>
      <title> SAPUI5 概述 </title>
      <link>https://coldinfire.github.io/2019/SAPUI5_Basic/</link>
      <pubDate>Wed, 17 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/SAPUI5_Basic/</guid>
      <description>SAPUI5 概述 SAPUI5：一套基于 HTML5、CSS3、JavaScript 的开发框架。 SAPUI5 内容 重构的 JavaScript 语法规范，帮助用户使用一致的、规范的语法使用</description>
    </item>
    
    <item>
      <title> Fiori Launch Pad </title>
      <link>https://coldinfire.github.io/2019/SAPFiori_LaunchPad/</link>
      <pubDate>Tue, 16 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/SAPFiori_LaunchPad/</guid>
      <description>Fiori Launch Pad SAP Fiori Launch Pad 包含内容: 应用以磁贴形式展示在首页 首页磁贴包括静态磁贴、动态磁贴、新闻磁贴 Tile Catalog：用户可以运行的所有程序的集合 Tile Gr</description>
    </item>
    
    <item>
      <title> Fiori 简介 </title>
      <link>https://coldinfire.github.io/2019/SAPFiori_AllOverview/</link>
      <pubDate>Tue, 16 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/SAPFiori_AllOverview/</guid>
      <description>框架设计 SAP Fiori UI5有五种设计原则。这些原则使 SAP Fiori 变得简单，并将不同的事务分解为基于任务的简单 UI 应用程序。 基于角色：SAP 已经分解了各种 SAP 事务</description>
    </item>
    
  </channel>
</rss>