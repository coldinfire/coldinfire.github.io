<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>工具 on Small Fire`s Blog</title>
    <link>https://coldinfire.github.io/categories/%E5%B7%A5%E5%85%B7/</link>
    <description>Recent content in 工具 on Small Fire`s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 22 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://coldinfire.github.io/categories/%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title> Git 学习与总结 </title>
      <link>https://coldinfire.github.io/2018/Utils_Git/</link>
      <pubDate>Thu, 22 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/Utils_Git/</guid>
      <description>Git本地结构 Workspace： 工作区，实际操作的目录。 Index / Stage： 暂存区，数据暂时存放的区域，可在工作区和版本库之间进行数据的友好交</description>
    </item>
    
    <item>
      <title> Jenkins 使用 </title>
      <link>https://coldinfire.github.io/2018/WEB_CI_Jenkins/</link>
      <pubDate>Wed, 07 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/WEB_CI_Jenkins/</guid>
      <description>Jenkins 简介 Jenkins是一个开源的、提供友好操作界面的持续集成(CI)工具，起源于Hudson（Hudson是商用的），主要用于持续、自动的构</description>
    </item>
    
    <item>
      <title> NPM 使用 </title>
      <link>https://coldinfire.github.io/2018/Utils_NodeJs_NPM/</link>
      <pubDate>Sat, 10 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/Utils_NodeJs_NPM/</guid>
      <description>NPM 使用介绍 NPM 是随同 NodeJS 一起安装的标准的软件包管理工具，能解决 NodeJS 代码部署上的很多问题，常见的使用场景有以下几种： 允许用户从 NPM 服务器下载别人编写的</description>
    </item>
    
    <item>
      <title> Hugo 添加搜索功能(Algolia) </title>
      <link>https://coldinfire.github.io/2018/Utils_hugo2/</link>
      <pubDate>Wed, 07 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/Utils_hugo2/</guid>
      <description>Algolia：博客框架 https://www.algolia.com/ Algolia 配置 记录 API Keys 相关信息： Application ID Search-Only API Key Admin API Key Hugo 设置 在配置文件 config 中添加一下内容： [outputFormats.Algolia] baseName = &amp;#34;algolia&amp;#34; isPlainText = true mediaType = &amp;#34;application/json&amp;#34; notAlternative = true #vars 是 Hugo 内置变量</description>
    </item>
    
    <item>
      <title> NodeJS 安装使用 </title>
      <link>https://coldinfire.github.io/2018/Utils_NodeJs/</link>
      <pubDate>Tue, 06 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/Utils_NodeJs/</guid>
      <description>Node.js 使用 简单的说 Node.js 就是运行在服务端的 JavaScript。 Node.js 是一个基于 Chrome JavaScript 运行时建立的一个平台。 Node.js 是一个事件驱动 I/O 服务端 JavaScript 环境，基于 Google 的 V8 引擎</description>
    </item>
    
    <item>
      <title> 使用Hugo&#43;GitHub Pages快速搭建博客 </title>
      <link>https://coldinfire.github.io/2018/Utils_hugo1/</link>
      <pubDate>Sat, 03 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/Utils_hugo1/</guid>
      <description>工具准备 Hugo：博客框架 https://github.com/gohugoio/hugo Git：用来发布博客内容 https://git-scm.com/ Github：保存和显示博客内容 https://github.com/ MarkDown编辑软件：用来进行博客文章的编辑 Typora C</description>
    </item>
    
    <item>
      <title> Gradle 使用 </title>
      <link>https://coldinfire.github.io/2017/WEB_Build_Gradle/</link>
      <pubDate>Sun, 17 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2017/WEB_Build_Gradle/</guid>
      <description>Gradle 简介 Gradle 是一种开源构建自动化工具，其设计足够灵活，几乎可以构建任何类型的软件。Gradle 采用了领域特定语言 Groovy 的配置，大大简化了构建代码的行</description>
    </item>
    
    <item>
      <title> Maven Plugin Goal </title>
      <link>https://coldinfire.github.io/2017/WEB_Build_Maven_Plugin/</link>
      <pubDate>Sat, 16 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2017/WEB_Build_Maven_Plugin/</guid>
      <description>Maven 插件 Maven 插件主要是为 maven 中生命周期中的阶段服务，maven 中只定义了生命周期，以及生命周期的阶段，具体每个阶段中执行何种操作，完全交由插件决定</description>
    </item>
    
    <item>
      <title> Maven 依赖管理 </title>
      <link>https://coldinfire.github.io/2017/WEB_Build_Maven_Dependency/</link>
      <pubDate>Sat, 16 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2017/WEB_Build_Maven_Dependency/</guid>
      <description>依赖管理 添加依赖 右键点击工程 Maven &amp;ndash; &amp;gt; Add Dependency 添加 hibernate 包，spring-webmvc 等包都可以直接搜索添加到 pom.xml 文件中。 添加后打开pom.xml，发现多</description>
    </item>
    
    <item>
      <title> Maven 构建生命周期 </title>
      <link>https://coldinfire.github.io/2017/WEB_Build_Maven_LifeCycle/</link>
      <pubDate>Sat, 16 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2017/WEB_Build_Maven_LifeCycle/</guid>
      <description>Maven指令的生命周期 Maven 对项目构建过程分为三套相互独立的生命周期，分别是： Clean Lifecycle：在进行真正的构建之前进行一些清理工作 Default Li</description>
    </item>
    
    <item>
      <title> Maven POM 标签大全详解 </title>
      <link>https://coldinfire.github.io/2017/WEB_Build_Maven_POM/</link>
      <pubDate>Thu, 14 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2017/WEB_Build_Maven_POM/</guid>
      <description>引用链接：菜鸟教程 POM 基本配置 &amp;lt;project&amp;gt; ：文件的根节点 &amp;lt;modelversion&amp;gt; ： pom.xml使用的对象模型版本 &amp;lt;groupId&amp;gt; ：定义当前 Maven 项目隶属的实际项目，通常与域名反向一一对应 &amp;lt;artifactId&amp;gt; ：</description>
    </item>
    
    <item>
      <title> Maven 使用 </title>
      <link>https://coldinfire.github.io/2017/WEB_Build_Maven_Basic/</link>
      <pubDate>Thu, 14 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2017/WEB_Build_Maven_Basic/</guid>
      <description>Maven简介 什么是Maven Maven 是 apache 下的开源项目，自动化构件工具，服务于java的项目构件和依赖管理。Maven 提倡”约定优于配置“(Con</description>
    </item>
    
    <item>
      <title> Tomcat 使用 </title>
      <link>https://coldinfire.github.io/2017/WEB_Tomcat/</link>
      <pubDate>Wed, 01 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2017/WEB_Tomcat/</guid>
      <description>Tomcat 简介 Tomcat 服务器是一个免费的开放源代码的Web 应用服务器，属于轻量级应用，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试 JSP</description>
    </item>
    
    <item>
      <title> JSON&amp;JAVA 对象的转换 </title>
      <link>https://coldinfire.github.io/2017/WEB_JSON_JAVA/</link>
      <pubDate>Mon, 30 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2017/WEB_JSON_JAVA/</guid>
      <description>JSON 解析器 常见的解析器：Gson、jackson、fastjson、Jsonlib jackson 优点 解析大文件的速度比较快； 运行时占用的内存比较少，性能更</description>
    </item>
    
    <item>
      <title> JSON 详解 </title>
      <link>https://coldinfire.github.io/2017/WEB_JSON/</link>
      <pubDate>Sat, 28 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2017/WEB_JSON/</guid>
      <description>JSON 简介 JSON（JavaScript Object Notation）是一种轻量级的用于数据交换的文本格式，2001年由 Douglas Crockford 提出，目的是取代繁琐笨重的 XML 格</description>
    </item>
    
  </channel>
</rss>