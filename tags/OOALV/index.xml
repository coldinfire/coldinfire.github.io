<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OOALV on Small Fire`s Blog</title>
    <link>https://coldinfire.github.io/tags/OOALV/</link>
    <description>Recent content in OOALV on Small Fire`s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 27 Jun 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://coldinfire.github.io/tags/OOALV/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title> ABAP Object Oriented 模板 </title>
      <link>https://coldinfire.github.io/2019/ABAP_ObjectOriented_Template/</link>
      <pubDate>Thu, 27 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_ObjectOriented_Template/</guid>
      <description></description>
    </item>
    
    <item>
      <title> OO ALV 事件管理 </title>
      <link>https://coldinfire.github.io/2018/ABAP_OOALV_Event/</link>
      <pubDate>Tue, 17 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_OOALV_Event/</guid>
      <description>ALV 对象注册事件 如果我们想处理 ALV Grid 实例触发的事件，我们应该定义并实现一个事件处理程序类。 创建 ALV Grid 实例后，我们必须注册此事件处理程序类的实例来处</description>
    </item>
    
    <item>
      <title> OO ALV 事件类工具 </title>
      <link>https://coldinfire.github.io/2018/ABAP_OOALV_EventUtils/</link>
      <pubDate>Tue, 17 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_OOALV_EventUtils/</guid>
      <description>为了更加方便的使用 cl_gui_alv_grid 的事件功能，将一些基本事件的定义和实现放到一个 inclue 中，Report 程序中包含就可以使用。 事件的方法实际功能需要定义对应的 F</description>
    </item>
    
    <item>
      <title> OO ALV 修改Layou和FieldCatalog </title>
      <link>https://coldinfire.github.io/2018/ABAP_OOALV_LayoutFcat/</link>
      <pubDate>Sun, 15 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_OOALV_LayoutFcat/</guid>
      <description>显示后，修改字段目录和布局 在运行期间，可以在首次显示列表后设置新的布局或新字段目录。 这些组件具有 get/set 方法来完成此操作。 Field Catalog GET_FRONTEND_FIELDCATALOG SET_FRONTEND_FIELDCATALOG Layout GET_FRONTEND_LAYOUT SET_FRONTEND_LAYOUT 代码示例 DATA</description>
    </item>
    
    <item>
      <title> OO ALV 排序和过滤 </title>
      <link>https://coldinfire.github.io/2018/ABAP_OOALV_SortFilter/</link>
      <pubDate>Sun, 15 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_OOALV_SortFilter/</guid>
      <description>OO ALV 设置排序条件 可以为 ALV 数据设置排序条件。 初始化排序功能，在方法 SET_TABLE_FOR_FIRST_DISPLAY 中的参数 IT_SORT 添加由系统标准的排序结构 LVC_T_SORT 生成的内表来实现。 FORM prepare_sort_table CHANGING pt_sort TYPE lvc_t_sort . DATA ls_sort TYPE</description>
    </item>
    
    <item>
      <title> OO ALV 不同Container使用 </title>
      <link>https://coldinfire.github.io/2018/ABAP_OOALV_DiffContainers/</link>
      <pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_OOALV_DiffContainers/</guid>
      <description>1.Custom container 自定义容器可以使用类 CL_GUI_CUSTOM_CONTAINER 创建，但它需要一个可以放置它的父容器，或者需要在自定义 Screen 中创建一个自定义控制区域。 这个解决方案是现在开发的应用程序</description>
    </item>
    
    <item>
      <title> OO ALV Demo </title>
      <link>https://coldinfire.github.io/2018/ABAP_OOALV_Demo/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_OOALV_Demo/</guid>
      <description>OO ALV 简单实例 其中屏幕的创建， 和对应PAI、PBO 以及 Status title 等可以自定调整。 REPORT zoo_alv_demo. TYPE-POOLS: slis. &amp;#34; Global data Decleration. &amp;#34; TYPES:BEGIN OF str_output, ebeln TYPE ebeln, aedat TYPE erdat, ernam TYPE ernam, ebelp TYPE ebelp, matnr TYPE matnr, werks TYPE werks_d, menge TYPE bstmg, meins</description>
    </item>
    
    <item>
      <title> OO ALV 使用 </title>
      <link>https://coldinfire.github.io/2018/ABAP_OOALV_Basis/</link>
      <pubDate>Sun, 08 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_OOALV_Basis/</guid>
      <description>OO ALV ALV GRID CONTROL 使用了控制器技术以实现屏幕显示，和所有的控制器一样，ALV GRID CONTROL 通过系统中的一个全局的类提供了方法，以响应它的动作。 使用了 ABAP 的对象以</description>
    </item>
    
  </channel>
</rss>