<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SALV on Small Fire`s Blog</title>
    <link>https://coldinfire.github.io/tags/SALV/</link>
    <description>Recent content in SALV on Small Fire`s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 13 Jun 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://coldinfire.github.io/tags/SALV/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title> SALV ALV Demo</title>
      <link>https://coldinfire.github.io/2019/ABAP_SALV_Demo/</link>
      <pubDate>Thu, 13 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_SALV_Demo/</guid>
      <description>SALV 框架代码 *&amp;amp;---------------------------------------------------------------------* *&amp;amp; Report ZSALV_DEMO *&amp;amp;---------------------------------------------------------------------* REPORT zsalv_demo. TABLES: mara,marc,rlgrap. TYPES: BEGIN OF str_demo, matnr TYPE mara-matnr, werks TYPE marc-werks, dismm TYPE marc-dismm, dispo TYPE marc-dispo, END OF str_demo. DATA: gt_alv TYPE STANDARD TABLE OF str_demo, gs_alv TYPE str_demo. &amp;#34;SALV Data&amp;#34; DATA: list_display TYPE sap_bool. DATA: go_container TYPE REF TO cl_gui_custom_container. DATA: go_alv TYPE REF TO cl_salv_table. DATA: go_error TYPE REF TO cx_salv_error. DATA: go_message TYPE</description>
    </item>
    
    <item>
      <title> SALV 可编辑设置 </title>
      <link>https://coldinfire.github.io/2019/ABAP_SALV_Editable/</link>
      <pubDate>Mon, 10 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_SALV_Editable/</guid>
      <description>SALV Editable with Single (custom) Method 不使用按钮 找到一个被触发但在输出显示给用户之前的事件。 找到一个可以在 Grid 和 Full Screen ALV 中工作的事件。 Full Screen ALV 触发 TOP_OF_PAGE 而不是 Grid ALV，至于 Grid 没</description>
    </item>
    
    <item>
      <title> ALV 结果读取 </title>
      <link>https://coldinfire.github.io/2019/ABAP_SALV_ResultRead/</link>
      <pubDate>Sun, 09 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_SALV_ResultRead/</guid>
      <description>传递 ALV 内表数据到被调用的程序 使用 SAP MEMORY 或者 ABAP MEMORY 在调用的程序中：EXPORT it_tab TO MEMORY &amp;lsquo;Z_SUBMIT_MEMORY&amp;rsquo;. 在被调用的程序中：IMPORT T_ITAB FROM MEMORY &amp;lsquo;Z_SUBMIT_MEMORY&amp;rsquo;. 使用类 CL_SALV_BS_RUNTIME_INFO 这个是 SAP 提供的</description>
    </item>
    
    <item>
      <title> SALV 布局列分组 </title>
      <link>https://coldinfire.github.io/2019/ABAP_SALV_ColumnSpecificGroup/</link>
      <pubDate>Sun, 09 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_SALV_ColumnSpecificGroup/</guid>
      <description>布局列分组 (Columns Specific Grouping) 通常情况下 ALV 的布局(Layout)下是没有列分组的(可以把列分组理解成过滤器)，列分组就是为了方便大家在布局中选择字段轻而易</description>
    </item>
    
    <item>
      <title> SALV CheckBox 设置 </title>
      <link>https://coldinfire.github.io/2019/ABAP_SALV_CheckBox/</link>
      <pubDate>Sat, 08 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_SALV_CheckBox/</guid>
      <description>添加复选框功能 要获得可编辑的复选框，首先我们需要从 column 对象中获取显示内表中定义的 checkbox 字段列。 此后，我们需要使用方法 SET_CELL_TYPE 将单元格类型设置为 IF_SALV_C_CELL_TYPE =&amp;gt; CHE</description>
    </item>
    
    <item>
      <title> SALV Color 设置 </title>
      <link>https://coldinfire.github.io/2019/ABAP_SALV_Color/</link>
      <pubDate>Sat, 08 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_SALV_Color/</guid>
      <description>ALV颜色设置 单元格颜色 为特定的单元格设置颜色，这需要在 ALV 输出内表中添加一个专门保存颜色的字段，类型为 LVC_T_SCOL。设置完颜色后（包</description>
    </item>
    
    <item>
      <title> SALV Columns 设置字段目录 </title>
      <link>https://coldinfire.github.io/2019/ABAP_SALV_ColumnSet/</link>
      <pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_SALV_ColumnSet/</guid>
      <description>Fieldcat 设置 Function ALV、OO ALV 可通过 Fieldcat 对列进行相关设置，SALV 也有类似于这样的东西，只不过不是 Fieldcat，而是通过 CL_SALV_COLUMN 对象来实现的。可以修改列</description>
    </item>
    
    <item>
      <title> SALV Display 设置 </title>
      <link>https://coldinfire.github.io/2019/ABAP_SALV_DisplaySet/</link>
      <pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_SALV_DisplaySet/</guid>
      <description>Display 设置 可以通过类 CL_SALV_DISPLAY_SETTINGS 中的一些方法进行 SALV 显示的设置。 SET_VERTICAL_LINES：设置是否显示垂直线 SET_HORIZONTAL_LIN</description>
    </item>
    
    <item>
      <title> SALV Functions 设置 </title>
      <link>https://coldinfire.github.io/2019/ABAP_SALV_Functions/</link>
      <pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_SALV_Functions/</guid>
      <description>Functions 设置 CL_SALV_TABLE 中提供了方法 get_functions，set_default；通过这两个方法可以创建 Status。 *$*$*.....CODE_ADD_1 - Begin..................................1..*$*$* PRIVATE SECTION. METHODS:set_functions CHANGING co_alv TYPE REF TO cl_salv_table. *$*$*.....CODE_ADD_1 - End....................................1..*$*$* *$*$*.....CODE_ADD_2</description>
    </item>
    
    <item>
      <title> SALV Layout 设置 </title>
      <link>https://coldinfire.github.io/2019/ABAP_SALV_Layout/</link>
      <pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_SALV_Layout/</guid>
      <description>Layout 设置 默认情况下，SALV 的 Tool Bar 上只有修改 Layout 一个按钮，需要对功能进行拓展。 SET_KEY：Set Layout Key，Logical Group Name SET_INIT</description>
    </item>
    
    <item>
      <title> SALV Selections 设置 </title>
      <link>https://coldinfire.github.io/2019/ABAP_SALV_Selection/</link>
      <pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_SALV_Selection/</guid>
      <description>选择数据 CL_SALV_SELECTIONS 可以处理 ALV 中的选择数据方式和获取选择的具体内容。 GET_SELECTED_ROWS：获取 ALV 中选中的行 SALV_T_ROW GET_SELECTED_C</description>
    </item>
    
    <item>
      <title> SALV 事件处理 </title>
      <link>https://coldinfire.github.io/2019/ABAP_SALV_Event/</link>
      <pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_SALV_Event/</guid>
      <description>标准事件处理 CLASS lcl_event_handler DEFINITION. PUBLIC SECTION. METHODS: on_link_click FOR EVENT link_click OF cl_salv_events_table IMPORTING row &amp;#34;事件触发所在的行号&amp;#34; column. &amp;#34;事件触发所在的列名&amp;#34; METHODS: on_double_click FOR EVENT double_click OF cl_salv_events_table IMPORTING row column. ENDCLASS.</description>
    </item>
    
    <item>
      <title> SALV 图标设置 </title>
      <link>https://coldinfire.github.io/2019/ABAP_SALV_IConsTooltips/</link>
      <pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_SALV_IConsTooltips/</guid>
      <description>图标设置 为了能够在 SALV 上添加 ICON 和提示信息，需要做以下内容： 列值作为 ICON 值： 在输出表中，需要添加 ICON 作为值。这样就可以将 ICON_GREEN_LIGHT 用作交通绿灯 将 SALV 的 ICON 列设置</description>
    </item>
    
    <item>
      <title> SALV 排序&amp;分类汇总&amp;过滤 </title>
      <link>https://coldinfire.github.io/2019/ABAP_SALV_SortsFilter/</link>
      <pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_SALV_SortsFilter/</guid>
      <description>排序设置 排序在 ALV 中也是一个比较重要的功能，在有合计的场合下，排序能实现排序字段的小计(subtotal)。 通过 get_sorts 方法，得到类 CL_SALV_SORTS 的引用 调用类方</description>
    </item>
    
    <item>
      <title> SALV 页头和页尾设置 </title>
      <link>https://coldinfire.github.io/2019/ABAP_SALV_PageTopEnd/</link>
      <pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_SALV_PageTopEnd/</guid>
      <description>添加页头(Top of page)和页脚(End of page) *$*$*.....CODE_ADD_1 - Begin..................................1..*$*$* PRIVATE SECTION. &amp;#34;Set Top of page&amp;#34; METHODS: set_top_of_page CHANGING co_alv TYPE REF TO cl_salv_table. &amp;#34;Set End of page&amp;#34; METHODS: set_end_of_page CHANGING co_alv TYPE REF TO cl_salv_table. *$*$*.....CODE_ADD_1 - End....................................1..*$*$* *$*$*.....CODE_ADD_2 - Begin..................................2..*$*$* CALL METHOD me-&amp;gt;set_top_of_page CHANGING co_alv = go_alv. CALL METHOD me-&amp;gt;set_end_of_page CHANGING co_alv</description>
    </item>
    
    <item>
      <title> SALV 创建 ALV </title>
      <link>https://coldinfire.github.io/2019/ABAP_SALV_Create/</link>
      <pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_SALV_Create/</guid>
      <description>创建和显示 ALV *&amp;amp;---------------------------------------------------------------------* *&amp;amp; This code snippet will show how to use the CL_SALV_TABLE to *&amp;amp; generate the ALV *&amp;amp;---------------------------------------------------------------------* REPORT ztest_oo_alv_main. *----------------------------------------------------------------------* * CLASS lcl_report DEFINITION *----------------------------------------------------------------------* CLASS lcl_report DEFINITION. PUBLIC SECTION. TYPES: BEGIN OF str_vbak, vbeln TYPE vbak-vbeln, erdat TYPE erdat, auart TYPE auart, kunnr TYPE kunnr, netwr TYPE netwr, check TYPE flag, &amp;#34;复选框&amp;#3</description>
    </item>
    
    <item>
      <title> SALV 使用简介 </title>
      <link>https://coldinfire.github.io/2019/ABAP_SALV_Basis/</link>
      <pubDate>Mon, 03 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_SALV_Basis/</guid>
      <description>引用自：https://www.cnblogs.com/jiangzhengjun/p/4291387.html 简介 SALV 可以使用函数方式生成 ALV</description>
    </item>
    
  </channel>
</rss>