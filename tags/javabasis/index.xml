<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>javabasis on Small Fire`s Blog</title>
    <link>https://coldinfire.github.io/tags/javabasis/</link>
    <description>Recent content in javabasis on Small Fire`s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 21 Oct 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://coldinfire.github.io/tags/javabasis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title> JAVA 反射 </title>
      <link>https://coldinfire.github.io/2017/JAVA_Reflection/</link>
      <pubDate>Sat, 21 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2017/JAVA_Reflection/</guid>
      <description>反射 Java 反射机制 (Reflection) 在程序 运行时，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意一个方法和属性。 这种动态</description>
    </item>
    
    <item>
      <title> JAVA IO </title>
      <link>https://coldinfire.github.io/2017/JAVA_IO/</link>
      <pubDate>Wed, 18 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2017/JAVA_IO/</guid>
      <description>IO 流简介 Java.io 包几乎包含了所有操作输入、输出需要的类。所有这些流类代表了输入源和输出目标。 流是一组有顺序的，有起点和终点的字节集合，是对数据传输</description>
    </item>
    
    <item>
      <title> JAVA 集合框架 </title>
      <link>https://coldinfire.github.io/2017/JAVA_Collection/</link>
      <pubDate>Sun, 15 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2017/JAVA_Collection/</guid>
      <description>集合 集合类的特点：集合只用于存储对象，集合长度是可变的，集合可以存储不同类型的对象。 所有集合类都位于 java.util包下。 集合里只能保存对</description>
    </item>
    
    <item>
      <title> BeanUtil 工具类使用 </title>
      <link>https://coldinfire.github.io/2017/JAVA_BeanUtil/</link>
      <pubDate>Sat, 14 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2017/JAVA_BeanUtil/</guid>
      <description>BeanUtils的使用 commons-beanutils 是 Apache 组织下的一个基础的开源库，它提供了对 Java 反射和内省的 API 的包装，依赖内省，其主要目的是利用反射机制对 JavaBean 的属性进行处</description>
    </item>
    
  </channel>
</rss>